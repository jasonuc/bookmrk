generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String   @id
  username            String   @unique
  primaryEmailAddress String
  shelfs              Shelf[]
  books               Book[]
  role                Role[]   @default([USER])
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Book {
  id          String      @id @default(uuid())
  title       String // IN-DTO
  imageUrl    String? // IN-DTO
  rating      Int         @default(0) // IN-DTO
  notes       Note[]
  dateAdded   DateTime    @default(now())
  lastUpdated DateTime    @updatedAt
  status      Status      @default(READING) // IN-DTO
  user        User        @relation(fields: [userId], references: [id])
  userId      String // IN-DTO
  bookShelf   BookShelf[]
}

model Shelf {
  id          String      @id @default(uuid())
  name        String
  description String
  user        User?       @relation(fields: [userId], references: [id])
  userId      String
  bookShelf   BookShelf[]
}

model BookShelf {
  id      String @id @default(uuid())
  bookId  String
  shelfId String
  book    Book   @relation(fields: [bookId], references: [id])
  shelf   Shelf  @relation(fields: [shelfId], references: [id])
}

model Note {
  id        String   @id @default(uuid())
  content   String
  bookId    String
  createdAt DateTime @default(now())
  book      Book     @relation(fields: [bookId], references: [id])
}

enum Status {
  READING
  TBR
  DNF
  FINISHED
}

enum Role {
  USER
  ADMIN
  OWNER
}
