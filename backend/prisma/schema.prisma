generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // url      = env("PROD_DATABASE_URL")
}

model User {
  id                  String   @id
  username            String   @unique
  primaryEmailAddress String
  shelfs              Shelf[]
  books               Book[]
  role                Role[]   @default([USER])
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Book {
  id          String   @id @default(uuid())
  title       String
  imageUrl    String?
  rating      Int      @default(0)
  notes       Note[]
  dateAdded   DateTime @default(now())
  lastUpdated DateTime @updatedAt
  status      Status   @default(READING)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  shelf       Shelf    @relation(fields: [shelfId], references: [id], onDelete: Restrict)
  shelfId     String
}

model Shelf {
  id          String  @id @default(uuid())
  name        String
  description String? @default("Another literary universe.")
  colour      String
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  book        Book[]

  @@unique([name, userId, colour])
  @@unique([name, userId])
  @@unique([userId, colour])
}

model Note {
  id        String   @id @default(uuid())
  content   String
  bookId    String
  createdAt DateTime @default(now())
  book      Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
}

enum Status {
  READING
  TBR
  DNF
  FINISHED
}

enum Role {
  USER
  ADMIN
  OWNER
}
